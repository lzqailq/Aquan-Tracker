{"code":"import { TrackerConfig } from \"../types/index\";\nimport { createHistoryEvent } from \"../utils/pv\";\nexport default class Tracker {\n    constructor(options) {\n        this.data = Object.assign(this.initDef(), options); //把options复制到this.initDef中去，有相同的就会覆盖\n        this.installTracker();\n    }\n    initDef() {\n        // 重写赋值\n        window.history['pushState'] = createHistoryEvent('pushState');\n        window.history['replaceState'] = createHistoryEvent('replaceState');\n        return {\n            sdkVersion: TrackerConfig.version,\n            historyTracker: false,\n            hashTracker: false,\n            domTracker: false,\n            jsError: false\n        };\n    }\n    // 事件捕获器      targetKey:这个值是后台定的\n    captureEvents(mouseEventList, targetKey, data) {\n        mouseEventList.forEach((item, index) => {\n            window.addEventListener(item, () => {\n                console.log(\"监听到了\");\n            });\n        });\n    }\n    installTracker() {\n        // 如果用户开启了historyTracker\n        if (this.data.historyTracker) {\n            this.captureEvents(['pushState', 'replaceState', 'popstate'], \"history-pv\");\n        }\n    }\n}\n","references":["D:/web/项目/TRACKER/src/types/index.ts","D:/web/项目/TRACKER/src/utils/pv.ts"]}
