import { defineGlobal } from '@aliyun-sls/web-base';
import WebTracker from '@aliyun-sls/web-track-base';

var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};
function sendBeacon(url, payload) {
  if (navigator && navigator.sendBeacon) {
    return navigator.sendBeacon(`${url}?APIVersion=0.6.0`, payload);
  }
  return false;
}
function sendUseXhr(url, reqPayload) {
  const httpRequest_ = new window.XMLHttpRequest();
  httpRequest_.open("POST", `${url}?APIVersion=0.6.0`, true);
  httpRequest_.send(reqPayload);
}
function send(url, payload) {
  try {
    if (payload.length >= 32768) {
      sendUseXhr(url, payload);
      return;
    }
    if (!sendBeacon(url, payload)) {
      sendUseXhr(url, payload);
    }
  } catch (ex) {
    if (window && window.console && typeof window.console.error === "function") {
      console.error("Failed to log to ali log service because of this exception:\n" + ex);
      console.error("Failed log data:", url);
    }
  }
}
function sendPutlog(url, payLoad, stsPlugin) {
  return __async(this, null, function* () {
    try {
      url = url.slice(0, -6);
      const { data, header } = yield stsPlugin.process(url, payLoad);
      const httpRequest_ = new window.XMLHttpRequest();
      httpRequest_.open("POST", url, true);
      for (let k in header) {
        httpRequest_.setRequestHeader(k, header[k]);
      }
      httpRequest_.send(data);
    } catch (error) {
      if (window && window.console && typeof window.console.error === "function") {
        console.error("Failed to log to ali log service because of this exception:\n" + error);
        console.error("Failed log data:", url);
      }
    }
  });
}
class WebTrackerBrowser extends WebTracker {
  constructor(opt) {
    const superOpt = Object.assign({}, opt, {
      installUnloadHook: (hook) => {
        window.addEventListener("beforeunload", () => {
          hook();
        });
      },
      sendPayload: (url, payload) => {
        send(url, payload);
      }
    });
    super(superOpt);
  }
  useStsPlugin(stsPlugin) {
    this.getOpt().sendPayload = (url, payload) => {
      sendPutlog(url, payload, stsPlugin);
    };
    this.overwriteTransString(stsPlugin);
  }
}

defineGlobal(window, "SLS_Tracker", WebTrackerBrowser);

export { WebTrackerBrowser as default };
//# sourceMappingURL=web-track-browser.es.js.map
